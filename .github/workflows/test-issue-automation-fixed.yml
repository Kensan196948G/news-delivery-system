name: Test Issue Automation Fixed

on:
  push:
    branches:
      - feature/documentation-improvements
  issues:
    types: [opened, edited, labeled, unlabeled]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  auto-triage:
    runs-on: ubuntu-latest
    # Only run on issues events OR push for testing
    if: github.event_name == 'issues' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Auto-triage Logic
      uses: actions/github-script@v7
      with:
        script: |
          const { context } = require('@actions/github');
          
          // For testing on push, create a mock issue
          let issue;
          if (context.eventName === 'push' || context.eventName === 'workflow_dispatch') {
            console.log('Running in test mode (push/workflow_dispatch)');
            issue = {
              title: 'Test Issue for Automation',
              body: 'This is a test issue with bug and feature keywords',
              number: 999,
              user: { login: 'test-user' }
            };
          } else {
            issue = context.payload.issue;
          }
          
          if (!issue) {
            console.log('No issue found, skipping');
            return;
          }
          
          let labels = [];
          let assignees = [];
          
          // Analyze issue title and body for automatic labeling
          const title = issue.title.toLowerCase();
          const body = (issue.body || '').toLowerCase();
          const content = title + ' ' + body;
          
          console.log('Processing issue:');
          console.log('- Title:', issue.title);
          console.log('- Content length:', content.length);
          
          // Auto-labeling based on keywords
          if (content.includes('bug') || content.includes('error') || content.includes('broken')) {
            labels.push('bug');
          }
          if (content.includes('feature') || content.includes('enhancement') || content.includes('improve')) {
            labels.push('enhancement');
          }
          if (content.includes('documentation') || content.includes('docs') || content.includes('readme')) {
            labels.push('documentation');
          }
          if (content.includes('security') || content.includes('vulnerability') || content.includes('cve')) {
            labels.push('security');
          }
          
          console.log('Detected labels:', labels);
          
          // In test mode, just log what we would do
          if (context.eventName === 'push' || context.eventName === 'workflow_dispatch') {
            console.log('TEST MODE: Would add labels:', labels);
            console.log('TEST MODE: Would create welcome comment');
            return { test: true, labels: labels };
          }
          
          // Real mode: apply labels
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: labels
            });
          }
          
          // Add welcome comment
          const welcomeComment = 'ðŸ‘‹ Thanks for opening this issue!\\n\\nðŸ¤– **Auto-triage results:**\\n' + 
            (labels.length > 0 ? '- Labels added: ' + labels.join(', ') : '- No automatic labels applied') + '\\n\\n' +
            'ðŸ“‹ **Next steps:**\\n' +
            '- A maintainer will review this issue shortly\\n' +
            '- Please ensure all required information is provided';
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            body: welcomeComment
          });
          
          console.log('âœ… Auto-triage completed');
          return { success: true, labels: labels };